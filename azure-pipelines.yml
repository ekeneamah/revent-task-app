# .azure-pipelines.yml

trigger:
  branches:
    include:
      - main

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: Build
        displayName: 'Build Application'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

  - stage: Deploy
    displayName: 'Deployment to Kubernetes'
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: 'Deploy to Kubernetes'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          # Download the scripts from secure storage
          - script: |
              echo "Downloading create_cluster.sh and create-postgress.sh scripts..."
              az storage blob download --account-name storage_account_name --container-name script_container_name --name create_cluster.sh --file create_cluster.sh
              az storage blob download --account-name storage_account_name --container-name script_container_name --name create-postgress.sh --file create-postgress.sh
            displayName: 'Download deployment scripts'

          # Execute the create_cluster.sh script
          - script: |
              chmod +x create_cluster.sh
              ./create_cluster.sh
            displayName: 'Create Kubernetes cluster'

          # Execute the create-postgress.sh script
          - script: |
              chmod +x create-postgress.sh
              ./create-postgress.sh
            displayName: 'Setup PostgreSQL database'

          # Build the Docker image
          - script: |
              docker build -t myapp:latest .
            displayName: 'Build Docker image'

          # Push the Docker image to a container registry
          # Replace `myregistry.azurecr.io` with your own container registry
            env:
              ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
              ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }} 

                run: |
                  echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
                  echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
                  - name: Login to Azure Container Registry
              run: docker login myregistry.azurecr.io -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
          

          # Deploy the Kubernetes manifests
          - script: |
              # Replace `myapp.yaml` with the path to your Kubernetes deployment manifest
              kubectl apply -f myapp.yaml
            displayName: 'Deploy to Kubernetes'

          # Clean up temporary resources (if applicable)
          # Add cleanup steps as needed
          # ...

